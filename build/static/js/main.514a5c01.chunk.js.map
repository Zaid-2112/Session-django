{"version":3,"sources":["actions/types.js","actions/profile.js","components/Navbar.js","actions/auth.js","hocs/Layout.js","containers/Home.js","components/CSRFToken.js","containers/Register.js","containers/Login.js","containers/Dashboard.js","containers/Weather.js","hocs/PrivateRoute.js","reducers/auth.js","reducers/profile.js","reducers/index.js","store.js","App.js","index.js"],"names":["REGISTER_SUCCESS","REGISTER_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","LOGOUT_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","DELETE_USER_SUCCESS","DELETE_USER_FAIL","LOAD_USER_PROFILE_SUCCESS","LOAD_USER_PROFILE_FAIL","UPDATE_USER_PROFILE_SUCCESS","UPDATE_USER_PROFILE_FAIL","load_user","dispatch","a","config","headers","axios","get","process","res","data","error","type","payload","connect","state","isAuthenticated","auth","logout","Cookies","body","JSON","stringify","post","success","authLinks","className","to","onClick","href","guestLinks","exact","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","checkAuthenticated","children","useEffect","Navbar","home","CSRFToken","useState","csrftoken","setcsrftoken","fetchData","name","cookieValue","document","cookie","cookies","split","i","length","trim","substring","decodeURIComponent","getCookie","value","register","username","password","re_password","formData","setFormData","accountCreated","setAccountCreated","onChange","e","target","onSubmit","preventDefault","placeholder","required","minLength","login","first_name_global","profile","first_name","last_name_global","last_name","phone_global","phone","city_global","city","delete_account","delete","update_profile","put","htmlFor","row","d","A_temp","Weather","setData","csv","then","width","height","domainPadding","padding","top","bottom","left","right","x","y","Component","component","rest","render","props","initialState","combineReducers","action","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","path","Home","Register","Login","Dashboard","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.514a5c01.chunk.js","sourcesContent":["// Auth Dispatch States\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\nexport const LOGOUT_FAIL = 'LOGOUT_FAIL';\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\nexport const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\nexport const DELETE_USER_SUCCESS = 'DELETE_USER_SUCCESS';\nexport const DELETE_USER_FAIL = 'DELETE_USER_FAIL';\n\n// Profile Dispatch States\nexport const LOAD_USER_PROFILE_SUCCESS = 'LOAD_USER_PROFILE_SUCCESS';\nexport const LOAD_USER_PROFILE_FAIL = 'LOAD_USER_PROFILE_FAIL';\nexport const UPDATE_USER_PROFILE_SUCCESS = 'UPDATE_USER_PROFILE_SUCCESS';\nexport const UPDATE_USER_PROFILE_FAIL = 'UPDATE_USER_PROFILE_FAIL';\n","import Cookies from 'js-cookie';\nimport axios from 'axios';\nimport {\n    LOAD_USER_PROFILE_SUCCESS,\n    LOAD_USER_PROFILE_FAIL,\n    UPDATE_USER_PROFILE_SUCCESS,\n    UPDATE_USER_PROFILE_FAIL\n} from './types';\n\nexport const load_user = () => async dispatch => {\n    const config = {\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        }\n    };\n\n    try {\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/profile/user`, config);\n\n        if (res.data.error) {\n            dispatch({\n                type: LOAD_USER_PROFILE_FAIL\n            });\n        } else {\n            dispatch({\n                type: LOAD_USER_PROFILE_SUCCESS,\n                payload: res.data\n            });\n        }\n    } catch (err) {\n        dispatch({\n            type: LOAD_USER_PROFILE_FAIL\n        });\n    }\n};\n\nexport const update_profile = (first_name, last_name, phone, city) => async dispatch => {\n    const config = {\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'X-CSRFToken': Cookies.get('csrftoken')\n        }\n    };\n\n    const body = JSON.stringify({\n        'withCredentials': true,\n        first_name,\n        last_name,\n        phone,\n        city\n    });\n\n    try {\n        const res = await axios.put(`${process.env.REACT_APP_API_URL}/profile/update`, body, config);\n\n        if (res.data.profile && res.data.username) {\n            dispatch({\n                type: UPDATE_USER_PROFILE_SUCCESS,\n                payload: res.data\n            });\n        } else {\n            dispatch({\n                type: UPDATE_USER_PROFILE_FAIL\n            });\n        }\n    } catch (err) {\n        dispatch({\n            type: UPDATE_USER_PROFILE_FAIL\n        });\n    }\n};\n","import React, { Fragment } from 'react';\nimport { Link, NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { logout } from '../actions/auth';\n\nconst navbar = ({ isAuthenticated, logout }) => {\n    const authLinks = (\n        <Fragment>\n            <li className='nav-item'>\n                <NavLink className='nav-link' to='/dashboard'>Dashboard</NavLink>\n            </li>\n            <li className='nav-item'>\n                <a className='nav-link' onClick={logout} href='#!'>Logout</a>\n            </li>\n        </Fragment>\n    );\n\n    const guestLinks = (\n        <Fragment>\n            <li className='nav-item'>\n                <NavLink className='nav-link' to='/login'>Login</NavLink>\n            </li>\n            <li className='nav-item'>\n                <NavLink className='nav-link' to='/register'>Register</NavLink>\n            </li>\n            <li className='nav-item'>\n                <NavLink className='nav-link' to='/Weather'>Weather</NavLink>\n            </li>\n        </Fragment>\n    );\n\n    return (\n        <nav className='navbar navbar-expand-lg navbar-light bg-light'>\n            <div className='container-fluid'>\n                <Link className='navbar-brand' exact to='/'>Session Auth</Link>\n                <button \n                    className='navbar-toggler' \n                    type='button' \n                    data-bs-toggle='collapse' \n                    data-bs-target='#navbarNav' \n                    aria-controls='navbarNav' \n                    aria-expanded='false' \n                    aria-label='Toggle navigation'\n                >\n                    <span className='navbar-toggler-icon'></span>\n                </button>\n                <div className='collapse navbar-collapse' id='navbarNav'>\n                    <ul className='navbar-nav'>\n                        <li className='nav-item'>\n                            <NavLink className='nav-link' exact to='/'>Home</NavLink>\n                        </li>\n                        { isAuthenticated ? authLinks : guestLinks }\n                    </ul>\n                </div>\n            </div>\n        </nav>\n    );\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { logout })(navbar);\n","import Cookies from 'js-cookie';\nimport axios from 'axios';\nimport { load_user } from './profile';\nimport {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT_SUCCESS,\n    LOGOUT_FAIL,\n    AUTHENTICATED_SUCCESS,\n    AUTHENTICATED_FAIL,\n    DELETE_USER_SUCCESS,\n    DELETE_USER_FAIL\n} from './types';\n\nexport const checkAuthenticated = () => async dispatch => {\n    const config = {\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json'\n        }\n    };\n\n    try {\n        const res = await axios.get(`${process.env.REACT_APP_API_URL}/accounts/authenticated`, config);\n\n        if (res.data.error || res.data.isAuthenticated === 'error') {\n            dispatch({\n                type: AUTHENTICATED_FAIL,\n                payload: false\n            });\n        }\n        else if (res.data.isAuthenticated === 'success') {\n            dispatch({\n                type: AUTHENTICATED_SUCCESS,\n                payload: true\n            });\n        }\n        else {\n            dispatch({\n                type: AUTHENTICATED_FAIL,\n                payload: false\n            });\n        }\n    } catch(err) {\n        dispatch({\n            type: AUTHENTICATED_FAIL,\n            payload: false\n        });\n    }\n};\n\nexport const login = (username, password) => async dispatch => {\n    const config = {\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'X-CSRFToken': Cookies.get('csrftoken')\n        }\n    };\n\n    const body = JSON.stringify({ username, password });\n\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/accounts/login`, body, config);\n\n        if (res.data.success) {\n            dispatch({\n                type: LOGIN_SUCCESS\n            });\n\n            dispatch(load_user());\n        } else {\n            dispatch({\n                type: LOGIN_FAIL\n            });\n        }\n    } catch(err) {\n        dispatch({\n            type: LOGIN_FAIL\n        });\n    }\n};\n\nexport const register = (username, password, re_password) => async dispatch => {\n    const config = {\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'X-CSRFToken': Cookies.get('csrftoken')\n        }\n    };\n\n    const body = JSON.stringify({ username, password, re_password });\n\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/accounts/register`, body, config);\n\n        if (res.data.error) {\n            dispatch({\n                type: REGISTER_FAIL\n            });\n        } else {\n            dispatch({\n                type: REGISTER_SUCCESS\n            });\n        }\n    } catch (err) {\n        dispatch({\n            type: REGISTER_FAIL\n        });\n    }\n};\n\nexport const logout = () => async dispatch => {\n    const config = {\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'X-CSRFToken': Cookies.get('csrftoken')\n        }\n    };\n\n    const body = JSON.stringify({\n        'withCredentials': true\n    });\n\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/accounts/logout`, body, config);\n\n        if (res.data.success) {\n            dispatch({\n                type: LOGOUT_SUCCESS\n            });\n        } else {\n            dispatch({\n                type: LOGOUT_FAIL\n            });\n        }\n    } catch(err) {\n        dispatch({\n            type: LOGOUT_FAIL\n        });\n    }\n};\n\nexport const delete_account = () => async dispatch => {\n    const config = {\n        headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json',\n            'X-CSRFToken': Cookies.get('csrftoken')\n        }\n    };\n\n    const body = JSON.stringify({\n        'withCredentials': true\n    });\n\n    try {\n        const res = await axios.delete(`${process.env.REACT_APP_API_URL}/accounts/delete`, config, body);\n\n        if (res.data.success) {\n            dispatch({\n                type: DELETE_USER_SUCCESS\n            });\n        } else {\n            dispatch({\n                type: DELETE_USER_FAIL\n            });\n        }\n    } catch (err) {\n        dispatch({\n            type: DELETE_USER_FAIL\n        });\n    }\n};\n","import React, { useEffect, Fragment } from 'react';\nimport Navbar from '../components/Navbar';\nimport { connect } from 'react-redux';\nimport { checkAuthenticated } from '../actions/auth';\nimport { load_user } from '../actions/profile';\n\nconst Layout = ({ children, checkAuthenticated, load_user }) => {\n    useEffect(() => {\n        checkAuthenticated();\n        load_user();\n    }, []);\n\n    return (\n        <Fragment>\n            <Navbar />\n            {children}\n        </Fragment>\n    );\n};\n\nexport default connect(null, { checkAuthenticated, load_user })(Layout);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\n\n\n\nconst home = () => (\n    <div className='container'>\n        <div className='mt-5 p-5 bg-light'>\n            <h1 className='display-4'>Welcome to Session Auth</h1>\n            <p className='lead'>\n                This is a wonderful application with session authentication in React and Django.\n            </p>\n            <hr className='my-4' />\n            <p>Click the button below to log in.</p>\n            <Link className='btn btn-primary btn-lg' to='/login'>Login</Link>\n        </div>\n        \n    </div>\n    \n);\n\nexport default home;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst CSRFToken = () => {\n    const [csrftoken, setcsrftoken] = useState('');\n\n    const getCookie = (name) => {\n        let cookieValue = null;\n        if (document.cookie && document.cookie !== '') {\n            let cookies = document.cookie.split(';');\n            for (let i = 0; i < cookies.length; i++) {\n                let cookie = cookies[i].trim();\n                if (cookie.substring(0, name.length + 1) === (name + '=')) {\n                    cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\n                    break;\n                }\n            }\n        }\n        return cookieValue;\n    }\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                await axios.get(`${process.env.REACT_APP_API_URL}/accounts/csrf_cookie`);\n            } catch (err) {\n\n            }\n        };\n\n        fetchData();\n        setcsrftoken(getCookie('csrftoken'));\n    }, []);\n\n    return (\n        <input type='hidden' name='csrfmiddlewaretoken' value={csrftoken} />\n    );\n};\n\nexport default CSRFToken;\n","import React, { useState } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { register } from '../actions/auth';\nimport CSRFToken from '../components/CSRFToken';\n\nconst Register = ({ register, isAuthenticated }) => {\n    const [formData, setFormData] = useState({\n        username: '',\n        password: '',\n        re_password: ''\n    });\n    const [accountCreated, setAccountCreated] = useState(false);\n\n    const { username, password, re_password } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        if (password === re_password) {\n            register(username, password, re_password);\n            setAccountCreated(true);\n        }\n    };\n\n    if (isAuthenticated)\n        return <Redirect to='/dashboard' />;\n    else if (accountCreated)\n        return <Redirect to='/login' />;\n\n    return (\n        <div className='container mt-5'>\n            <h1>Register for an Account</h1>\n            <p>Create an account with our Session Auth application</p>\n            <form onSubmit={e => onSubmit(e)}>\n                <CSRFToken />\n                <div className='form-group'>\n                    <label className='form-label'>Username: </label>\n                    <input\n                        className='form-control'\n                        type='text'\n                        placeholder='Username*'\n                        name='username'\n                        onChange={e => onChange(e)}\n                        value={username}\n                        required\n                    />\n                </div>\n                <div className='form-group'>\n                    <label className='form-label mt-3'>Password: </label>\n                    <input\n                        className='form-control'\n                        type='password'\n                        placeholder='Password*'\n                        name='password'\n                        onChange={e => onChange(e)}\n                        value={password}\n                        minLength='6'\n                        required\n                    />\n                </div>\n                <div className='form-group'>\n                    <label className='form-label mt-3'>Confirm Password: </label>\n                    <input\n                        className='form-control'\n                        type='password'\n                        placeholder='Confirm Password*'\n                        name='re_password'\n                        onChange={e => onChange(e)}\n                        value={re_password}\n                        minLength='6'\n                        required\n                    />\n                </div>\n                <button className='btn btn-primary mt-3' type='submit'>Register</button>\n            </form>\n            <p className='mt-3'>\n                Already have an Account? <Link to='/login'>Sign In</Link>\n            </p>\n        </div>\n    );\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { register })(Register);\n","import React, { useState } from 'react';\nimport { Redirect, Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { login } from '../actions/auth';\nimport CSRFToken from '../components/CSRFToken';\n\nconst Login = ({ login, isAuthenticated }) => {\n    const [formData, setFormData] = useState({\n        username: '',\n        password: ''\n    });\n\n    const { username, password } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        login(username, password);\n    };\n\n    if (isAuthenticated)\n        return <Redirect to='/dashboard' />;\n\n    return (\n        <div className='container mt-5'>\n            <h1>Sign In</h1>\n            <p>Sign into your Session Auth account</p>\n            <form onSubmit={e => onSubmit(e)}>\n                <CSRFToken />\n                <div className='form-group'>\n                    <label className='form-label'>Username: </label>\n                    <input\n                        className='form-control'\n                        type='text'\n                        placeholder='Username*'\n                        name='username'\n                        onChange={e => onChange(e)}\n                        value={username}\n                        required\n                    />\n                </div>\n                <div className='form-group'>\n                    <label className='form-label mt-3'>Password: </label>\n                    <input\n                        className='form-control'\n                        type='password'\n                        placeholder='Password*'\n                        name='password'\n                        onChange={e => onChange(e)}\n                        value={password}\n                        minLength='6'\n                        required\n                    />\n                </div>\n                <button className='btn btn-primary mt-3' type='submit'>Login</button>\n            </form>\n            <p className='mt-3'>\n                Don't have an Account? <Link to='/register'>Sign Up</Link>\n            </p>\n        </div>\n    );\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","import React, { useState, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { update_profile } from '../actions/profile';\nimport { delete_account } from '../actions/auth';\n\nconst Dashboard = ({\n    delete_account,\n    update_profile,\n    first_name_global,\n    last_name_global,\n    phone_global,\n    city_global\n}) => {\n    const [formData, setFormData] = useState({\n        first_name: '',\n        last_name: '',\n        phone: '',\n        city: ''\n    });\n\n    const { first_name, last_name, phone, city } = formData;\n\n    useEffect(() => {\n        setFormData({\n            first_name: first_name_global,\n            last_name: last_name_global,\n            phone: phone_global,\n            city: city_global\n        });\n    }, [first_name_global]);\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        update_profile(first_name, last_name, phone, city);\n    };\n\n    return (\n        <div className='container'>\n            <h1 className='mt-3'>Welcome to your User Dashboard</h1>\n            <p className='mt-3 mb-3'>Update your user profile below:</p>\n            <form onSubmit={e => onSubmit(e)}>\n                <div className='form-group'>\n                    <label className='form-label' htmlFor='first_name'>First Name</label>\n                    <input\n                        className='form-control'\n                        type='text'\n                        name='first_name'\n                        placeholder={`${first_name_global}`}\n                        onChange={e => onChange(e)}\n                        value={first_name}\n                    />\n                </div>\n                <div className='form-group'>\n                    <label className='form-label mt-3' htmlFor='last_name'>Last Name</label>\n                    <input\n                        className='form-control'\n                        type='text'\n                        name='last_name'\n                        placeholder={`${last_name_global}`}\n                        onChange={e => onChange(e)}\n                        value={last_name}\n                    />\n                </div>\n                <div className='form-group'>\n                    <label className='form-label mt-3' htmlFor='phone'>Phone</label>\n                    <input\n                        className='form-control'\n                        type='text'\n                        name='phone'\n                        placeholder={`${phone_global}`}\n                        onChange={e => onChange(e)}\n                        value={phone}\n                    />\n                </div>\n                <div className='form-group'>\n                    <label className='form-label mt-3' htmlFor='city'>City</label>\n                    <input\n                        className='form-control'\n                        type='text'\n                        name='city'\n                        placeholder={`${city_global}`}\n                        onChange={e => onChange(e)}\n                        value={city}\n                    />\n                </div>\n                <button className='btn btn-primary mt-3' type='submit'>Update Profile</button>\n            </form>\n            <p className='mt-5'>\n                Click the button below to delete your user account:\n            </p>\n            <a\n                className='btn btn-danger'\n                href='#!'\n                onClick={delete_account}\n            >\n                Delete Account\n            </a>\n        </div>\n    )\n};\n\nconst mapStateToProps = state => ({\n    first_name_global: state.profile.first_name,\n    last_name_global: state.profile.last_name,\n    phone_global: state.profile.phone,\n    city_global: state.profile.city,\n});\n\nexport default connect(mapStateToProps, { \n    delete_account,\n    update_profile\n })(Dashboard);\n","import React, { useState, useEffect } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { csv, select } from 'd3';\r\n\r\nimport { VictoryBar, VictoryChart} from 'victory';\r\n\r\nconst row = d => {\r\n  d.A_temp = +d.A_temp;\r\n  return d;\r\n};\r\n\r\nconst Weather = () => {\r\n  const [data, setData] = useState([]); \r\n  \r\n  \r\n  useEffect(() => {\r\n    csv('climate_data.csv', row).then(setData);\r\n  }, []);\r\n  return (\r\n    <VictoryChart\r\n      \r\n      //style={{tickLabels: {fontSize: 5, padding: 5}}}\r\n      width ='600'\r\n      height='250'\r\n      domainPadding={15}\r\n      \r\n      padding={{ top: 20, bottom: 50, left: 80, right: 80 }}\r\n    >\r\n      <VictoryBar data = {data} x=\"country\" y=\"A_temp\"/>\r\n    </VictoryChart>\r\n  );\r\n};\r\n\r\n//const rootElement = document.getElementById('root');\r\n//ReactDOM.render(<App />, rootElement);\r\nexport default Weather;\r\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nconst PrivateRoute = ({ component: Component, isAuthenticated, ...rest }) => (\n    <Route\n        {...rest}\n        render={props => isAuthenticated ? <Component {...props} /> : <Redirect to='/login' />}\n    />\n);\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {})(PrivateRoute);\n","import {\n    REGISTER_SUCCESS,\n    REGISTER_FAIL,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    LOGOUT_SUCCESS,\n    LOGOUT_FAIL,\n    AUTHENTICATED_SUCCESS,\n    AUTHENTICATED_FAIL,\n    DELETE_USER_SUCCESS,\n    DELETE_USER_FAIL\n} from '../actions/types';\n\nconst initialState = {\n    isAuthenticated: null\n};\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch(type) {\n        case AUTHENTICATED_SUCCESS:\n        case AUTHENTICATED_FAIL:\n            return {\n                ...state,\n                isAuthenticated: payload\n            }\n        case REGISTER_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: false\n            }\n        case LOGIN_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: true\n            }\n        case LOGOUT_SUCCESS:\n        case DELETE_USER_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: false\n            }\n        case REGISTER_FAIL:\n        case LOGIN_FAIL:\n        case LOGOUT_FAIL:\n        case DELETE_USER_FAIL:\n            return state\n        default:\n            return state\n    };\n};\n","import {\n    LOAD_USER_PROFILE_SUCCESS,\n    LOAD_USER_PROFILE_FAIL,\n    UPDATE_USER_PROFILE_SUCCESS,\n    UPDATE_USER_PROFILE_FAIL\n} from '../actions/types';\n\nconst initialState = {\n    username: '',\n    first_name: '',\n    last_name: '',\n    phone: '',\n    city: ''\n};\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch(type) {\n        case LOAD_USER_PROFILE_SUCCESS:\n        case UPDATE_USER_PROFILE_SUCCESS:\n            return {\n                ...state,\n                username: payload.username,\n                first_name: payload.profile.first_name,\n                last_name: payload.profile.last_name,\n                phone: payload.profile.phone,\n                city: payload.profile.city,\n            }\n        case LOAD_USER_PROFILE_FAIL:\n            return {\n                ...state,\n                username: '',\n                first_name: '',\n                last_name: '',\n                phone: '',\n                city: '',\n            }\n        case UPDATE_USER_PROFILE_FAIL:\n            return {\n                ...state\n            }\n        default:\n            return state\n    };\n};\n","import { combineReducers } from 'redux';\nimport auth from './auth';\nimport profile from './profile';\n\nexport default combineReducers({\n    auth,\n    profile\n});","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport Layout from './hocs/Layout';\n\nimport Home from './containers/Home';\nimport Register from './containers/Register';\nimport Login from './containers/Login';\nimport Dashboard from './containers/Dashboard';\nimport Weather from './containers/Weather';\n\nimport PrivateRoute from './hocs/PrivateRoute';\n\nimport { Provider } from 'react-redux';\nimport store from './store';\n\nconst App = () => (\n\n    <Provider store={store}>\n        <Router>\n            <Layout>\n                <Route exact path='/' component={Home} />\n                <Route exact path='/Weather' component={Weather} />\n                <Route exact path='/register' component={Register} />\n                <Route exact path='/login' component={Login} />\n                <PrivateRoute exact path='/dashboard' component={Dashboard} />\n            </Layout>\n        </Router>\n    </Provider>\n);\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}